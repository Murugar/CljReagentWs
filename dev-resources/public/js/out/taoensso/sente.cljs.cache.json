["^ ","~:use-macros",["^ ","~$warnf","~$taoensso.timbre","~$go","~$cljs.core.async.macros","~$have","~$taoensso.encore","~$go-loop","^4","~$have!","^6","~$have?","^6","~$debugf","^2","~$tracef","^2","~$infof","^2","~$errorf","^2"],"~:excludes",["~#set",[]],"~:name","~$taoensso.sente","~:imports",null,"~:requires",["^ ","~$timbre","^2","~$interfaces","~$taoensso.sente.interfaces","~$async","~$cljs.core.async","^F","^F","^H","^H","~$enc","^6","^2","^2","~$str","~$clojure.string","^K","^K","^6","^6"],"~:uses",["^ ","~$<!","^H","~$swap-in!","^6","~$chan","^H","~$format","^6","~$swapped","^6","~$reset-in!","^6","~$>!","^H","~$put!","^H"],"~:defs",["^ ","~$assert-send-args",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","~:line",765,"~:column",8,"~:end-line",765,"~:end-column",24,"~:private",true,"~:arglists",["~#list",["~$quote",["^14",[["~$x","~$?timeout-ms","~$?cb"]]]]]],"^12",true,"^@","~$taoensso.sente/assert-send-args","~:variadic",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"~:method-params",["^14",[["~$x","^16","^17"]]],"~:protocol-impl",null,"~:arglists-meta",["^14",[null,null]],"^[",1,"^Z",765,"^10",765,"~:max-fixed-arity",3,"~:fn-var",true,"^13",["^14",["^15",["^14",[["~$x","^16","^17"]]]]]],"~$map->ChAjaxSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1056,"^[",12,"^10",1056,"^11",24,"~:internal-ctor",true,"~:factory","~:map","^13",["^14",["^15",["^14",[["~$G__37655"]]]]]],"^@","~$taoensso.sente/map->ChAjaxSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^1:",["^14",[["^1C"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^1@",true,"^1A","^1B","^Z",1056,"^10",1056,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^1C"]]]]]],"~$->EdnPacker",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",210,"^[",10,"^10",210,"^11",19,"~:protocols",["^?",["~$taoensso.sente.interfaces/IPacker"]],"~:skip-protocol-flag",null,"^1A","~:positional","^13",["^14",["^15",["^14",[[]]]]]],"^1F",["^?",["^1G"]],"^@","~$taoensso.sente/->EdnPacker","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",19,"^1:",["^14",[[]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^1A","^1I","^Z",210,"^10",210,"^1=",0,"^1>",true,"^13",["^14",["^15",["^14",[[]]]]],"^1H",null],"~$as-event",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",107,"^[",7,"^10",107,"^11",15,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"^@","~$taoensso.sente/as-event","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",15,"^1:",["^14",[["~$x"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",107,"^10",107,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"~$server-event-msg?",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",133,"^[",7,"^10",133,"^11",24,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"^@","~$taoensso.sente/server-event-msg?","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^1:",["^14",[["~$x"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",133,"^10",133,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"~$send-buffered-server-evs>ws-clients!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",663,"^[",8,"^10",663,"^11",44,"^12",true,"^13",["^14",["^15",["^14",[["~$conns_","~$uid","~$buffered-evs-pstr","~$upd-conn!"]]]]],"~:doc","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"^12",true,"^@","~$taoensso.sente/send-buffered-server-evs>ws-clients!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",44,"^1:",["^14",[["^1P","^1Q","^1R","^1S"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",663,"^10",663,"^1=",4,"^1>",true,"^13",["^14",["^15",["^14",[["^1P","^1Q","^1R","^1S"]]]]],"^1T","Actually pushes buffered events (as packed-str) to all uid's WebSocket conns."],"~$pack",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",192,"^[",8,"^10",192,"^11",12,"^12",true,"^13",["^14",["^15",["^14",[["~$packer","~$?packer-meta","~$clj"],["^1W","^1X","^1Y","~$?cb-uuid"]]]]],"^1T","clj->prefixed-pstr","~:top-fn",["^ ","^19",false,"^1=",4,"^1:",["^14",[["^1W","^1X","^1Y"],["^1W","^1X","^1Y","^1Z"]]],"^13",["^14",[["^1W","^1X","^1Y"],["^1W","^1X","^1Y","^1Z"]]],"^1<",["^14",[null,null]]]],"^12",true,"^@","~$taoensso.sente/pack","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",12,"^1[",["^ ","^19",false,"^1=",4,"^1:",["^14",[["^1W","^1X","^1Y"],["^1W","^1X","^1Y","^1Z"]]],"^13",["^14",[["^1W","^1X","^1Y"],["^1W","^1X","^1Y","^1Z"]]],"^1<",["^14",[null,null]]],"^1:",["^14",[["^1W","^1X","^1Y"],["^1W","^1X","^1Y","^1Z"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",192,"^10",192,"^1=",4,"^1>",true,"^13",["^14",[["^1W","^1X","^1Y"],["^1W","^1X","^1Y","^1Z"]]],"^1T","clj->prefixed-pstr"],"~$chsk-send!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",749,"^[",7,"^10",749,"^11",17,"^13",["^14",["^15",["^14",[["~$chsk","~$ev"],["^22","^23","^16","^17"],["^22","^23","~$opts"]]]]],"^1T","Sends `[ev-id ev-?data :as event]`, returns true on apparent success.","^1[",["^ ","^19",false,"^1=",4,"^1:",["^14",[["^22","^23"],["^22","^23","^16","^17"],["^22","^23","^24"]]],"^13",["^14",[["^22","^23"],["^22","^23","^16","^17"],["^22","^23","^24"]]],"^1<",["^14",[null,null,null]]]],"^@","~$taoensso.sente/chsk-send!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",17,"^1[",["^ ","^19",false,"^1=",4,"^1:",["^14",[["^22","^23"],["^22","^23","^16","^17"],["^22","^23","^24"]]],"^13",["^14",[["^22","^23"],["^22","^23","^16","^17"],["^22","^23","^24"]]],"^1<",["^14",[null,null,null]]],"^1:",["^14",[["^22","^23"],["^22","^23","^16","^17"],["^22","^23","^24"]]],"^1;",null,"^1<",["^14",[null,null,null]],"^[",1,"^Z",749,"^10",749,"^1=",4,"^1>",true,"^13",["^14",[["^22","^23"],["^22","^23","^16","^17"],["^22","^23","^24"]]],"^1T","Sends `[ev-id ev-?data :as event]`, returns true on apparent success."],"~$validate-event",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",96,"^[",8,"^10",96,"^11",22,"^12",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"^12",true,"^@","~$taoensso.sente/validate-event","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",22,"^1:",["^14",[["~$x"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",96,"^10",96,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"~$event?",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",105,"^[",7,"^10",105,"^11",13,"^13",["^14",["^15",["^14",[["~$x"]]]]],"^1T","Valid [ev-id ?ev-data] form?"],"^@","~$taoensso.sente/event?","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",13,"^1:",["^14",[["~$x"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",105,"^10",105,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["~$x"]]]]],"^1T","Valid [ev-id ?ev-data] form?"],"~$event-msg?",["^ ","^@","~$taoensso.sente/event-msg?","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",1471,"^[",1,"^10",1471,"^11",16,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1471,"^[",6,"^10",1471,"^11",16]],"~$make-channel-socket!",["^ ","^@","~$taoensso.sente/make-channel-socket!","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",1473,"^[",1,"^10",1473,"^11",26,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1473,"^[",6,"^10",1473,"^11",26]],"~$make-channel-socket-server!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",242,"^[",7,"^10",242,"^11",34,"^13",["^14",["^15",["^14",[["~$web-server-ch-adapter","~$&",[["^ ","~:keys",["~$recv-buf-or-n","~$ws-kalive-ms","~$lp-timeout-ms","~$send-buf-ms-ajax","~$send-buf-ms-ws","~$user-id-fn","~$csrf-token-fn","~$handshake-data-fn","^1W"],"~:or",["^ ","^2B",["^14",["~$enc/ms","~:secs",25]],"^2E",30,"^2C",["^14",["^2J","^2K",20]],"^2G",["^14",["~$fn",["~$ring-req"],["^14",["~$or",["^14",["~$get-in","^2M",["~:session","~:csrf-token"]]],["^14",["^2O","^2M",["^2P","~:ring.middleware.anti-forgery/anti-forgery-token"]]],["^14",["^2O","^2M",["^2P","__anti-forgery-token"]]]]]]],"^1W","~:edn","^2D",100,"^2H",["^14",["^2L",["^2M"],null]],"^2F",["^14",["^2L",["^2M"],["^14",["^2O","^2M",["^2P","~:uid"]]]]],"^2A",["^14",["~$async/sliding-buffer",1000]]]]]]]]]],"^1T","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; (fn [ring-req]) -> CSRF token for Ajax POSTs.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows).","^1[",["^ ","^19",true,"^1=",1,"^1:",[["^14",["^2?",[["^ ","^2@",["^2A","^2B","^2C","^2D","^2E","^2F","^2G","^2H","^1W"],"^2I",["^ ","^2B",["^14",["^2J","^2K",25]],"^2E",30,"^2C",["^14",["^2J","^2K",20]],"^2G",["^14",["^2L",["^2M"],["^14",["^2N",["^14",["^2O","^2M",["^2P","^2Q"]]],["^14",["^2O","^2M",["^2P","^2R"]]],["^14",["^2O","^2M",["^2P","__anti-forgery-token"]]]]]]],"^1W","^2S","^2D",100,"^2H",["^14",["^2L",["^2M"],null]],"^2F",["^14",["^2L",["^2M"],["^14",["^2O","^2M",["^2P","^2T"]]]]],"^2A",["^14",["^2U",1000]]]]]]]],"^13",["^14",[["^2?","~$&",[["^ ","^2@",["^2A","^2B","^2C","^2D","^2E","^2F","^2G","^2H","^1W"],"^2I",["^ ","^2B",["^14",["^2J","^2K",25]],"^2E",30,"^2C",["^14",["^2J","^2K",20]],"^2G",["^14",["^2L",["^2M"],["^14",["^2N",["^14",["^2O","^2M",["^2P","^2Q"]]],["^14",["^2O","^2M",["^2P","^2R"]]],["^14",["^2O","^2M",["^2P","__anti-forgery-token"]]]]]]],"^1W","^2S","^2D",100,"^2H",["^14",["^2L",["^2M"],null]],"^2F",["^14",["^2L",["^2M"],["^14",["^2O","^2M",["^2P","^2T"]]]]],"^2A",["^14",["^2U",1000]]]]]]]],"^1<",["^14",[null]]]],"^@","~$taoensso.sente/make-channel-socket-server!","^19",true,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",34,"^1[",["^ ","^19",true,"^1=",1,"^1:",[["^14",["^2?",[["^ ","^2@",["^2A","^2B","^2C","^2D","^2E","^2F","^2G","^2H","^1W"],"^2I",["^ ","^2B",["^14",["^2J","^2K",25]],"^2E",30,"^2C",["^14",["^2J","^2K",20]],"^2G",["^14",["^2L",["^2M"],["^14",["^2N",["^14",["^2O","^2M",["^2P","^2Q"]]],["^14",["^2O","^2M",["^2P","^2R"]]],["^14",["^2O","^2M",["^2P","__anti-forgery-token"]]]]]]],"^1W","^2S","^2D",100,"^2H",["^14",["^2L",["^2M"],null]],"^2F",["^14",["^2L",["^2M"],["^14",["^2O","^2M",["^2P","^2T"]]]]],"^2A",["^14",["^2U",1000]]]]]]]],"^13",["^14",[["^2?","~$&",[["^ ","^2@",["^2A","^2B","^2C","^2D","^2E","^2F","^2G","^2H","^1W"],"^2I",["^ ","^2B",["^14",["^2J","^2K",25]],"^2E",30,"^2C",["^14",["^2J","^2K",20]],"^2G",["^14",["^2L",["^2M"],["^14",["^2N",["^14",["^2O","^2M",["^2P","^2Q"]]],["^14",["^2O","^2M",["^2P","^2R"]]],["^14",["^2O","^2M",["^2P","__anti-forgery-token"]]]]]]],"^1W","^2S","^2D",100,"^2H",["^14",["^2L",["^2M"],null]],"^2F",["^14",["^2L",["^2M"],["^14",["^2O","^2M",["^2P","^2T"]]]]],"^2A",["^14",["^2U",1000]]]]]]]],"^1<",["^14",[null]]],"^1:",[["^14",["^2?",[["^ ","^2@",["^2A","^2B","^2C","^2D","^2E","^2F","^2G","^2H","^1W"],"^2I",["^ ","^2B",["^14",["^2J","^2K",25]],"^2E",30,"^2C",["^14",["^2J","^2K",20]],"^2G",["^14",["^2L",["^2M"],["^14",["^2N",["^14",["^2O","^2M",["^2P","^2Q"]]],["^14",["^2O","^2M",["^2P","^2R"]]],["^14",["^2O","^2M",["^2P","__anti-forgery-token"]]]]]]],"^1W","^2S","^2D",100,"^2H",["^14",["^2L",["^2M"],null]],"^2F",["^14",["^2L",["^2M"],["^14",["^2O","^2M",["^2P","^2T"]]]]],"^2A",["^14",["^2U",1000]]]]]]]],"^1;",null,"^1<",["^14",[null]],"^[",1,"^Z",242,"^10",242,"^1=",1,"^1>",true,"^13",["^14",[["^2?","~$&",[["^ ","^2@",["^2A","^2B","^2C","^2D","^2E","^2F","^2G","^2H","^1W"],"^2I",["^ ","^2B",["^14",["^2J","^2K",25]],"^2E",30,"^2C",["^14",["^2J","^2K",20]],"^2G",["^14",["^2L",["^2M"],["^14",["^2N",["^14",["^2O","^2M",["^2P","^2Q"]]],["^14",["^2O","^2M",["^2P","^2R"]]],["^14",["^2O","^2M",["^2P","__anti-forgery-token"]]]]]]],"^1W","^2S","^2D",100,"^2H",["^14",["^2L",["^2M"],null]],"^2F",["^14",["^2L",["^2M"],["^14",["^2O","^2M",["^2P","^2T"]]]]],"^2A",["^14",["^2U",1000]]]]]]]],"^1T","Takes a web server adapter[1] and returns a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from clients).\n    :send-fn ; (fn [user-id ev] for server>user push.\n    :ajax-post-fn                ; (fn [ring-req]) for Ring CSRF-POST + chsk URL.\n    :ajax-get-or-ws-handshake-fn ; (fn [ring-req]) for Ring GET + chsk URL.\n    :connected-uids ; Watchable, read-only (atom {:ws #{_} :ajax #{_} :any #{_}}).\n\n  Common options:\n    :user-id-fn        ; (fn [ring-req]) -> unique user-id for server>user push.\n    :csrf-token-fn     ; (fn [ring-req]) -> CSRF token for Ajax POSTs.\n    :handshake-data-fn ; (fn [ring-req]) -> arb user data to append to handshake evs.\n    :ws-kalive-ms      ; Ping to keep a WebSocket conn alive if no activity\n                       ; w/in given msecs.\n    :lp-timeout-ms     ; Timeout (repoll) long-polling Ajax conns after given msecs.\n    :send-buf-ms-ajax  ; [2]\n    :send-buf-ms-ws    ; [2]\n    :packer            ; :edn (default), or an IPacker implementation.\n\n  [1] e.g. `(taoensso.sente.server-adapters.http-kit/get-sch-adapter)` or\n           `(taoensso.sente.server-adapters.immutant/get-sch-adapter)`.\n      You must have the necessary web-server dependency in your project.clj and\n      the necessary entry in your namespace's `ns` form.\n\n  [2] Optimization to allow transparent batching of rapidly-triggered\n      server>user pushes. This is esp. important for Ajax clients which use a\n      (slow) reconnecting poller. Actual event dispatch may occur <= given ms\n      after send call (larger values => larger batch windows)."],"~$ajax-lite",["^ ","^@","~$taoensso.sente/ajax-lite","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",733,"^[",8,"^10",733,"^11",22,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",733,"^[",13,"^10",733,"^11",22],"^1T","Alias of `taoensso.encore/ajax-lite`"],"~$get-chsk-url",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1278,"^[",8,"^10",1278,"^11",20,"^12",true,"^13",["^14",["^15",["^14",[["~$protocol","~$host","~$path","~$type"]]]]]],"^12",true,"^@","~$taoensso.sente/get-chsk-url","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",20,"^1:",["^14",[["^2Z","^2[","^30","^31"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",1278,"^10",1278,"^1=",4,"^1>",true,"^13",["^14",["^15",["^14",[["^2Z","^2[","^30","^31"]]]]]],"~$-chsk-send!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",739,"^[",4,"^10",739,"^11",15,"~:protocol","~$taoensso.sente/IChSocket","^1T",null,"^13",["^14",["^15",["^14",[["^22","^23","^24"]]]]]],"^34","^35","^@","~$taoensso.sente/-chsk-send!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",15,"^1:",["^14",[["^22","^23","^24"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",735,"^10",739,"^1=",3,"^1>",true,"^13",["^14",["^15",["^14",[["^22","^23","^24"]]]]],"^1T",null],"~$-chsk-reconnect!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",738,"^[",4,"^10",738,"^11",20,"^34","^35","^1T",null,"^13",["^14",["^15",["^14",[["^22"]]]]]],"^34","^35","^@","~$taoensso.sente/-chsk-reconnect!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",20,"^1:",["^14",[["^22"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",735,"^10",738,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^22"]]]]],"^1T",null],"~$receive-handshake!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",848,"^[",8,"^10",848,"^11",26,"^12",true,"^13",["^14",["^15",["^14",[["~$chsk-type","^22","^1Y"]]]]]],"^12",true,"^@","~$taoensso.sente/receive-handshake!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",26,"^1:",["^14",[["^3:","^22","^1Y"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",848,"^10",848,"^1=",3,"^1>",true,"^13",["^14",["^15",["^14",[["^3:","^22","^1Y"]]]]]],"~$start-client-chsk-router!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1456,"^[",7,"^10",1456,"^11",32,"^13",["^14",["^15",["^14",[["~$ch-recv","~$event-msg-handler","~$&",[["^ ","~:as","^24","^2@",["~$trace-evs?","~$error-handler"]]]]]]]],"^1T","Creates a go-loop to call `(event-msg-handler <client-event-msg>)` and\n  log any errors. Returns a `(fn stop! [])`.\n\n  For performance, you'll likely want your `event-msg-handler` fn to be\n  non-blocking (at least for slow handling operations). Clojure offers\n  a rich variety of tools here including futures, agents, core.async,\n  etc.\n\n  Advanced users may also prefer to write their own loop against `ch-recv`.","^1[",["^ ","^19",true,"^1=",2,"^1:",[["^14",["^3=","^3>",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^13",["^14",[["^3=","^3>","~$&",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^1<",["^14",[null]]]],"^@","~$taoensso.sente/start-client-chsk-router!","^19",true,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",32,"^1[",["^ ","^19",true,"^1=",2,"^1:",[["^14",["^3=","^3>",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^13",["^14",[["^3=","^3>","~$&",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^1<",["^14",[null]]],"^1:",[["^14",["^3=","^3>",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^1;",null,"^1<",["^14",[null]],"^[",1,"^Z",1456,"^10",1456,"^1=",2,"^1>",true,"^13",["^14",[["^3=","^3>","~$&",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^1T","Creates a go-loop to call `(event-msg-handler <client-event-msg>)` and\n  log any errors. Returns a `(fn stop! [])`.\n\n  For performance, you'll likely want your `event-msg-handler` fn to be\n  non-blocking (at least for slow handling operations). Clojure offers\n  a rich variety of tools here including futures, agents, core.async,\n  etc.\n\n  Advanced users may also prefer to write their own loop against `ch-recv`."],"~$chsk-destroy!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",742,"^[",14,"^10",742,"^11",27,"^13",["^14",["^15",["^14",[["^22"]]]]],"^1T","Deprecated"],"^@","~$taoensso.sente/chsk-destroy!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",27,"^1:",["^14",[["^22"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",8,"^Z",742,"^10",742,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^22"]]]]],"^1T","Deprecated"],"~$->ChAjaxSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1056,"^[",12,"^10",1056,"^11",24,"^1@",true,"^1A","^1I","^13",["^14",["^15",["^14",[["~$client-id","~$chs","~$params","^1W","~$url","~$state_","~$active-retry-id_","~$ever-opened?_","~$backoff-ms-fn","~$ajax-opts","~$curr-xhr_"]]]]]],"^@","~$taoensso.sente/->ChAjaxSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^1:",["^14",[["^3F","^3G","^3H","^1W","^3I","^3J","^3K","^3L","^3M","^3N","^3O"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^1@",true,"^1A","^1I","^Z",1056,"^10",1056,"^1=",11,"^1>",true,"^13",["^14",["^15",["^14",[["^3F","^3G","^3H","^1W","^3I","^3J","^3K","^3L","^3M","^3N","^3O"]]]]]],"~$send-buffered-server-evs>ajax-clients!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",672,"^[",8,"^10",672,"^11",46,"^12",true,"^13",["^14",["^15",["^14",[["^1P","^1Q","^1R"]]]]],"^1T","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"^12",true,"^@","~$taoensso.sente/send-buffered-server-evs>ajax-clients!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",46,"^1:",["^14",[["^1P","^1Q","^1R"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",672,"^10",672,"^1=",3,"^1>",true,"^13",["^14",["^15",["^14",[["^1P","^1Q","^1R"]]]]],"^1T","Actually pushes buffered events (as packed-str) to all uid's Ajax conns.\n  Allows some time for possible Ajax poller reconnects."],"~$default-client-side-ajax-timeout-ms",["^ ","^@","~$taoensso.sente/default-client-side-ajax-timeout-ms","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",1049,"^[",1,"^10",1049,"^11",51,"^12",true,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1049,"^[",16,"^10",1049,"^11",51,"^12",true],"^1T","We must set *some* client-side timeout otherwise an unpredictable (and\n  probably too short) browser default will be used. Must be > server's\n  :lp-timeout-ms."],"~$ChAjaxSocket",["^ ","~:num-fields",11,"^1F",["^?",["~$cljs.core/IRecord","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","^35","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^@","~$taoensso.sente/ChAjaxSocket","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"~:type",true,"^[",12,"^1@",true,"^Z",1056,"~:record",true,"^10",1056,"^1H",["^?",["^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42","^43","^45","^46","^47","^48"]]],"~$set-logging-level!",["^ ","^@","~$taoensso.sente/set-logging-level!","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",1499,"^[",1,"^10",1499,"^11",24,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1499,"^[",6,"^10",1499,"^11",24],"^1T","DEPRECATED. Please use `timbre/set-level!` instead"],"~$->ChAutoSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1211,"^[",12,"^10",1211,"^11",24,"^1@",true,"^1A","^1I","^13",["^14",["^15",["^14",[["~$ws-chsk-opts","~$ajax-chsk-opts","^3J","~$impl_"]]]]]],"^@","~$taoensso.sente/->ChAutoSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^1:",["^14",[["^4?","^4@","^3J","^4A"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^1@",true,"^1A","^1I","^Z",1211,"^10",1211,"^1=",4,"^1>",true,"^13",["^14",["^15",["^14",[["^4?","^4@","^3J","^4A"]]]]]],"~$-chsk-disconnect!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",737,"^[",4,"^10",737,"^11",21,"^34","^35","^1T",null,"^13",["^14",["^15",["^14",[["^22","~$reconn?"]]]]]],"^34","^35","^@","~$taoensso.sente/-chsk-disconnect!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",21,"^1:",["^14",[["^22","^4D"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",735,"^10",737,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[["^22","^4D"]]]]],"^1T",null],"~$start-chsk-router!",["^ ","^@","~$taoensso.sente/start-chsk-router!","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",1477,"^[",1,"^10",1477,"^11",24,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1477,"^[",6,"^10",1477,"^11",24]],"~$put-server-event-msg>ch-recv!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",151,"^[",8,"^10",151,"^11",37,"^12",true,"^13",["^14",["^15",["^14",[["^3=",["^ ","^3?","~$ev-msg","^2@",["~$event","~$?reply-fn"]]]]]]],"^1T","All server `event-msg`s go through this"],"^12",true,"^@","~$taoensso.sente/put-server-event-msg>ch-recv!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",37,"^1:",["^14",[["^3=","~$p__36770"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",151,"^10",151,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[["^3=",["^ ","^3?","^4I","^2@",["^4J","^4K"]]]]]]],"^1T","All server `event-msg`s go through this"],"~$coerce-packer",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",217,"^[",8,"^10",217,"^11",21,"^12",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"^12",true,"^@","~$taoensso.sente/coerce-packer","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",21,"^1:",["^14",[["~$x"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",217,"^10",217,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"~$-chsk-connect!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",736,"^[",4,"^10",736,"^11",18,"^34","^35","^1T",null,"^13",["^14",["^15",["^14",[["^22"]]]]]],"^34","^35","^@","~$taoensso.sente/-chsk-connect!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",18,"^1:",["^14",[["^22"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",735,"^10",736,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^22"]]]]],"^1T",null],"~$default-edn-packer",["^ ","^@","~$taoensso.sente/default-edn-packer","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",215,"^[",1,"^10",215,"^11",34,"^12",true,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",215,"^[",16,"^10",215,"^11",34,"^12",true]],"~$new-ChAjaxSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1201,"^[",8,"^10",1201,"^11",24,"^12",true,"^13",["^14",["^15",["^14",[["^24"]]]]]],"^12",true,"^@","~$taoensso.sente/new-ChAjaxSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^1:",["^14",[["^24"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",1201,"^10",1201,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^24"]]]]]],"~$receive-buffered-evs!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",833,"^[",8,"^10",833,"^11",29,"^12",true,"^13",["^14",["^15",["^14",[["^3G","^1Y"]]]]]],"^12",true,"^@","~$taoensso.sente/receive-buffered-evs!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",29,"^1:",["^14",[["^3G","^1Y"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",833,"^10",833,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[["^3G","^1Y"]]]]]],"~$chsk-connect!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",741,"^[",14,"^10",741,"^11",27,"^13",["^14",["^15",["^14",[["^22"]]]]]],"^@","~$taoensso.sente/chsk-connect!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",27,"^1:",["^14",[["^22"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",8,"^Z",741,"^10",741,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^22"]]]]]],"~$-start-chsk-router!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1411,"^[",8,"^10",1411,"^11",27,"^12",true,"^13",["^14",["^15",["^14",[["~$server?","^3=","^3>","^24"]]]]]],"^12",true,"^@","~$taoensso.sente/-start-chsk-router!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",27,"^1:",["^14",[["^4[","^3=","^3>","^24"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",1411,"^10",1411,"^1=",4,"^1>",true,"^13",["^14",["^15",["^14",[["^4[","^3=","^3>","^24"]]]]]],"~$EdnPacker",["^ ","^3V",0,"^1F",["^?",["^1G"]],"^@","~$taoensso.sente/EdnPacker","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",19,"^4:",true,"^[",10,"^Z",210,"^4;",false,"^10",210,"^1H",null],"~$ChAutoSocket",["^ ","^3V",4,"^1F",["^?",["^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42","^43","^44","^45","^46","^35","^47","^48"]],"^@","~$taoensso.sente/ChAutoSocket","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^4:",true,"^[",12,"^1@",true,"^Z",1211,"^4;",true,"^10",1211,"^1H",["^?",["^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42","^43","^45","^46","^47","^48"]]],"~$cb-error?",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",164,"^[",14,"^10",164,"^11",23,"^13",["^14",["^15",["^14",[["~$cb-reply-clj"]]]]]],"^@","~$taoensso.sente/cb-error?","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",23,"^1:",["^14",[["^56"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",8,"^Z",164,"^10",164,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^56"]]]]]],"~$unpack",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",172,"^[",8,"^10",172,"^11",14,"^12",true,"^13",["^14",["^15",["^14",[["^1W","~$prefixed-pstr"]]]]],"^1T","prefixed-pstr->[clj ?cb-uuid]"],"^12",true,"^@","~$taoensso.sente/unpack","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",14,"^1:",["^14",[["^1W","^59"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",172,"^10",172,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[["^1W","^59"]]]]],"^1T","prefixed-pstr->[clj ?cb-uuid]"],"~$chsk-disconnect!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",743,"^[",14,"^10",743,"^11",30,"^13",["^14",["^15",["^14",[["^22"]]]]]],"^@","~$taoensso.sente/chsk-disconnect!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",30,"^1:",["^14",[["^22"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",8,"^Z",743,"^10",743,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^22"]]]]]],"~$default-chsk-url-fn",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1503,"^[",6,"^10",1503,"^11",25],"^@","~$taoensso.sente/default-chsk-url-fn","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",25,"^1:",["^14",[["^30","~$p__38285","~$websocket?"]]],"^1;",null,"^1<",["^14",[]],"^[",1,"^Z",1503,"^10",1503,"^1=",3,"^1>",true,"^13",null,"^1T","DEPRECATED"],"~$start-chsk-router-loop!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1492,"^[",7,"^10",1492,"^11",30,"^13",["^14",["^15",["^14",[["~$event-handler","^3="]]]]],"^1T","DEPRECATED: Please use `start-chsk-router!` instead"],"^@","~$taoensso.sente/start-chsk-router-loop!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",30,"^1:",["^14",[["^5B","^3="]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",1492,"^10",1492,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[["^5B","^3="]]]]],"^1T","DEPRECATED: Please use `start-chsk-router!` instead"],"~$chsk-send->closed!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",759,"^[",8,"^10",759,"^11",26,"^12",true,"^13",["^14",["^15",["^14",[["~$?cb-fn"]]]]]],"^12",true,"^@","~$taoensso.sente/chsk-send->closed!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",26,"^1:",["^14",[["^5E"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",759,"^10",759,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^5E"]]]]]],"~$new-ChAutoSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1270,"^[",8,"^10",1270,"^11",24,"^12",true,"^13",["^14",["^15",["^14",[["^24"]]]]]],"^12",true,"^@","~$taoensso.sente/new-ChAutoSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^1:",["^14",[["^24"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",1270,"^10",1270,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^24"]]]]]],"~$handshake?",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",843,"^[",8,"^10",843,"^11",18,"^12",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"^12",true,"^@","~$taoensso.sente/handshake?","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",18,"^1:",["^14",[["~$x"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",843,"^10",843,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"~$ajax-call",["^ ","^@","~$taoensso.sente/ajax-call","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",1501,"^[",8,"^10",1501,"^11",22,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1501,"^[",13,"^10",1501,"^11",22],"^1T","DEPRECATED: Please use `ajax-lite` instead"],"~$new-ChWebSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1038,"^[",8,"^10",1038,"^11",23,"^12",true,"^13",["^14",["^15",["^14",[["^24"]]]]]],"^12",true,"^@","~$taoensso.sente/new-ChWebSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",23,"^1:",["^14",[["^24"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",1038,"^10",1038,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^24"]]]]]],"~$ChWebSocket",["^ ","^3V",12,"^1F",["^?",["^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42","^43","^44","^45","^46","^35","^47","^48"]],"^@","~$taoensso.sente/ChWebSocket","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",23,"^4:",true,"^[",12,"^1@",true,"^Z",878,"^4;",true,"^10",878,"^1H",["^?",["^3W","^3X","^3Y","^3Z","^3[","^40","^41","^42","^43","^45","^46","^47","^48"]]],"~$pull-unused-cb-fn!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",774,"^[",8,"^10",774,"^11",26,"^12",true,"^13",["^14",["^15",["^14",[["~$cbs-waiting_","^1Z"]]]]]],"^12",true,"^@","~$taoensso.sente/pull-unused-cb-fn!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",26,"^1:",["^14",[["^5R","^1Z"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",774,"^10",774,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[["^5R","^1Z"]]]]]],"~$assert-event",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",109,"^[",7,"^10",109,"^11",19,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"^@","~$taoensso.sente/assert-event","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",19,"^1:",["^14",[["~$x"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",109,"^10",109,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"~$chsk-reconnect!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",745,"^[",7,"^10",745,"^11",22,"^13",["^14",["^15",["^14",[["^22"]]]]],"^1T","Useful for reauthenticating after login/logout, etc."],"^@","~$taoensso.sente/chsk-reconnect!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",22,"^1:",["^14",[["^22"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",745,"^10",745,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^22"]]]]],"^1T","Useful for reauthenticating after login/logout, etc."],"~$make-channel-socket-client!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1285,"^[",7,"^10",1285,"^11",34,"^13",["^14",["^15",["^14",[["^30","~$&",[["^ ","^2@",["^31","^2[","^3H","^2A","^1W","^3F","^3N","~$wrap-recv-evs?","^3M"],"^3?","^24","^2I",["^ ","^31","~:auto","^2A",["^14",["^2U",2048]],"^1W","^2S","^3F",["^14",["^2N",["^14",["~:client-uuid","^24"]],["^14",["~$enc/uuid-str"]]]],"^5Y",true,"^3M","~$enc/exp-backoff"]],"~$_deprecated-more-opts"]]]]]],"^1T","Returns nil on failure, or a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n             ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n    :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n    :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n    :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n  Common options:\n    :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n    :host           ; Server host (defaults to current page's host).\n    :params         ; Map of any params to incl. in chsk Ring requests (handy\n                    ; for application-level auth, etc.).\n    :packer         ; :edn (default), or an IPacker implementation.\n    :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n    :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?","^1[",["^ ","^19",true,"^1=",1,"^1:",[["^14",["^30",[["^ ","^2@",["^31","^2[","^3H","^2A","^1W","^3F","^3N","^5Y","^3M"],"^3?","^24","^2I",["^ ","^31","^5Z","^2A",["^14",["^2U",2048]],"^1W","^2S","^3F",["^14",["^2N",["^14",["^5[","^24"]],["^14",["^60"]]]],"^5Y",true,"^3M","^61"]],"^62"]]]],"^13",["^14",[["^30","~$&",[["^ ","^2@",["^31","^2[","^3H","^2A","^1W","^3F","^3N","^5Y","^3M"],"^3?","^24","^2I",["^ ","^31","^5Z","^2A",["^14",["^2U",2048]],"^1W","^2S","^3F",["^14",["^2N",["^14",["^5[","^24"]],["^14",["^60"]]]],"^5Y",true,"^3M","^61"]],"^62"]]]],"^1<",["^14",[null]]]],"^@","~$taoensso.sente/make-channel-socket-client!","^19",true,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",34,"^1[",["^ ","^19",true,"^1=",1,"^1:",[["^14",["^30",[["^ ","^2@",["^31","^2[","^3H","^2A","^1W","^3F","^3N","^5Y","^3M"],"^3?","^24","^2I",["^ ","^31","^5Z","^2A",["^14",["^2U",2048]],"^1W","^2S","^3F",["^14",["^2N",["^14",["^5[","^24"]],["^14",["^60"]]]],"^5Y",true,"^3M","^61"]],"^62"]]]],"^13",["^14",[["^30","~$&",[["^ ","^2@",["^31","^2[","^3H","^2A","^1W","^3F","^3N","^5Y","^3M"],"^3?","^24","^2I",["^ ","^31","^5Z","^2A",["^14",["^2U",2048]],"^1W","^2S","^3F",["^14",["^2N",["^14",["^5[","^24"]],["^14",["^60"]]]],"^5Y",true,"^3M","^61"]],"^62"]]]],"^1<",["^14",[null]]],"^1:",[["^14",["^30",[["^ ","^2@",["^31","^2[","^3H","^2A","^1W","^3F","^3N","^5Y","^3M"],"^3?","^24","^2I",["^ ","^31","^5Z","^2A",["^14",["^2U",2048]],"^1W","^2S","^3F",["^14",["^2N",["^14",["^5[","^24"]],["^14",["^60"]]]],"^5Y",true,"^3M","^61"]],"^62"]]]],"^1;",null,"^1<",["^14",[null]],"^[",1,"^Z",1285,"^10",1285,"^1=",1,"^1>",true,"^13",["^14",[["^30","~$&",[["^ ","^2@",["^31","^2[","^3H","^2A","^1W","^3F","^3N","^5Y","^3M"],"^3?","^24","^2I",["^ ","^31","^5Z","^2A",["^14",["^2U",2048]],"^1W","^2S","^3F",["^14",["^2N",["^14",["^5[","^24"]],["^14",["^60"]]]],"^5Y",true,"^3M","^61"]],"^62"]]]],"^1T","Returns nil on failure, or a map with keys:\n    :ch-recv ; core.async channel to receive `event-msg`s (internal or from\n             ; clients). May `put!` (inject) arbitrary `event`s to this channel.\n    :send-fn ; (fn [event & [?timeout-ms ?cb-fn]]) for client>server send.\n    :state   ; Watchable, read-only (atom {:type _ :open? _ :uid _ :csrf-token _}).\n    :chsk    ; IChSocket implementer. You can usu. ignore this.\n\n  Common options:\n    :type           ; e/o #{:auto :ws :ajax}. You'll usually want the default (:auto).\n    :host           ; Server host (defaults to current page's host).\n    :params         ; Map of any params to incl. in chsk Ring requests (handy\n                    ; for application-level auth, etc.).\n    :packer         ; :edn (default), or an IPacker implementation.\n    :ajax-opts      ; Base opts map provided to `taoensso.encore/ajax-lite`.\n    :wrap-recv-evs? ; Should events from server be wrapped in [:chsk/recv _]?"],"~$with-?meta",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",190,"^[",8,"^10",190,"^11",18,"^12",true,"^13",["^14",["^15",["^14",[["~$x","~$?m"]]]]]],"^12",true,"^@","~$taoensso.sente/with-?meta","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",18,"^1:",["^14",[["~$x","^65"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",190,"^10",190,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[["~$x","^65"]]]]]],"~$cb-chan-as-fn",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",815,"^[",8,"^10",815,"^11",21,"^12",true,"^13",["^14",["^15",["^14",[["^17","^23"]]]]],"^1T","Experimental, undocumented. Allows a core.async channel to be provided\n  instead of a cb-fn. The channel will receive values of form\n  [<event-id>.cb <reply>]."],"^12",true,"^@","~$taoensso.sente/cb-chan-as-fn","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",21,"^1:",["^14",[["^17","^23"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",815,"^10",815,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[["^17","^23"]]]]],"^1T","Experimental, undocumented. Allows a core.async channel to be provided\n  instead of a cb-fn. The channel will receive values of form\n  [<event-id>.cb <reply>]."],"~$map->ChAutoSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1211,"^[",12,"^10",1211,"^11",24,"^1@",true,"^1A","^1B","^13",["^14",["^15",["^14",[["~$G__37698"]]]]]],"^@","~$taoensso.sente/map->ChAutoSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^1:",["^14",[["^6:"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^1@",true,"^1A","^1B","^Z",1211,"^10",1211,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^6:"]]]]]],"~$IChSocket",["^ ","^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",735,"^[",14,"^10",735,"^11",23,"^1T",null,"~:protocol-symbol",true,"~:jsdoc",["^14",["@interface"]],"~:protocol-info",["^ ","~:methods",["^ ","^4P",[["^22"]],"^4C",[["^22","^4D"]],"^37",[["^22"]],"^33",[["^22","^23","^24"]]]]],"^6=",true,"^@","^35","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",23,"^[",1,"^Z",735,"^6?",["^ ","^6@",["^ ","^4P",[["^22"]],"^4C",[["^22","^4D"]],"^37",[["^22"]],"^33",[["^22","^23","^24"]]]],"~:info",null,"^10",735,"~:impls",["^?",["^5P","^49","^54"]],"^1T",null,"^6>",["^14",["@interface"]]],"~$debug-mode?_",["^ ","^@","~$taoensso.sente/debug-mode?_","^Y","dev-resources/public/js/out/taoensso/sente.cljs","^Z",89,"^[",1,"^10",89,"^11",22,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",89,"^[",10,"^10",89,"^11",22]],"~$cb-success?",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",165,"^[",14,"^10",165,"^11",25,"^13",["^14",["^15",["^14",[["^56"]]]]]],"^@","~$taoensso.sente/cb-success?","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",25,"^1:",["^14",[["^56"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",8,"^Z",165,"^10",165,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^56"]]]]]],"~$->ChWebSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",878,"^[",12,"^10",878,"^11",23,"^1@",true,"^1A","^1I","^13",["^14",["^15",["^14",[["^3F","^3G","^3H","^1W","^3I","^3J","^3K","~$retry-count_","^3L","^3M","^5R","~$socket_"]]]]]],"^@","~$taoensso.sente/->ChWebSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",23,"^1:",["^14",[["^3F","^3G","^3H","^1W","^3I","^3J","^3K","^6H","^3L","^3M","^5R","^6I"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^1@",true,"^1A","^1I","^Z",878,"^10",878,"^1=",12,"^1>",true,"^13",["^14",["^15",["^14",[["^3F","^3G","^3H","^1W","^3I","^3J","^3K","^6H","^3L","^3M","^5R","^6I"]]]]]],"~$start-server-chsk-router!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",1443,"^[",7,"^10",1443,"^11",32,"^13",["^14",["^15",["^14",[["^3=","^3>","~$&",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]]]],"^1T","Creates a go-loop to call `(event-msg-handler <server-event-msg>)` and\n  log any errors. Returns a `(fn stop! [])`.\n\n  For performance, you'll likely want your `event-msg-handler` fn to be\n  non-blocking (at least for slow handling operations). Clojure offers\n  a rich variety of tools here including futures, agents, core.async,\n  etc.\n\n  Advanced users may also prefer to write their own loop against `ch-recv`.","^1[",["^ ","^19",true,"^1=",2,"^1:",[["^14",["^3=","^3>",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^13",["^14",[["^3=","^3>","~$&",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^1<",["^14",[null]]]],"^@","~$taoensso.sente/start-server-chsk-router!","^19",true,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",32,"^1[",["^ ","^19",true,"^1=",2,"^1:",[["^14",["^3=","^3>",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^13",["^14",[["^3=","^3>","~$&",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^1<",["^14",[null]]],"^1:",[["^14",["^3=","^3>",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^1;",null,"^1<",["^14",[null]],"^[",1,"^Z",1443,"^10",1443,"^1=",2,"^1>",true,"^13",["^14",[["^3=","^3>","~$&",[["^ ","^3?","^24","^2@",["^3@","^3A"]]]]]],"^1T","Creates a go-loop to call `(event-msg-handler <server-event-msg>)` and\n  log any errors. Returns a `(fn stop! [])`.\n\n  For performance, you'll likely want your `event-msg-handler` fn to be\n  non-blocking (at least for slow handling operations). Clojure offers\n  a rich variety of tools here including futures, agents, core.async,\n  etc.\n\n  Advanced users may also prefer to write their own loop against `ch-recv`."],"~$client-event-msg?",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",122,"^[",7,"^10",122,"^11",24,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"^@","~$taoensso.sente/client-event-msg?","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",24,"^1:",["^14",[["~$x"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",122,"^10",122,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["~$x"]]]]]],"~$map->ChWebSocket",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",878,"^[",12,"^10",878,"^11",23,"^1@",true,"^1A","^1B","^13",["^14",["^15",["^14",[["~$G__37592"]]]]]],"^@","~$taoensso.sente/map->ChWebSocket","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",23,"^1:",["^14",[["^6P"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^1@",true,"^1A","^1B","^Z",878,"^10",878,"^1=",1,"^1>",true,"^13",["^14",["^15",["^14",[["^6P"]]]]]],"~$merge>chsk-state!",["^ ","^W",null,"^X",["^ ","^Y","/home/iqmsoft/clojure/rente/dev-resources/public/js/out/taoensso/sente.cljs","^Z",780,"^[",8,"^10",780,"^11",25,"^12",true,"^13",["^14",["^15",["^14",[[["^ ","^2@",["^3G","^3J"],"^3?","^22"],"~$merge-state"]]]]]],"^12",true,"^@","~$taoensso.sente/merge>chsk-state!","^19",false,"^Y","dev-resources/public/js/out/taoensso/sente.cljs","^11",25,"^1:",["^14",[["~$p__37500","^6S"]]],"^1;",null,"^1<",["^14",[null,null]],"^[",1,"^Z",780,"^10",780,"^1=",2,"^1>",true,"^13",["^14",["^15",["^14",[[["^ ","^2@",["^3G","^3J"],"^3?","^22"],"^6S"]]]]]]],"~:require-macros",["^ ","~$asyncm","^4","^4","^4","^I","^6","^6","^6","^D","^2","^2","^2"],"~:cljs.analyzer/constants",["^ ","~:seen",["^?",["~:curr-xhr_","~:chsk/closed","~:?reply-fn","~:ws-kalive-ms","~:ajax-post-fn","~:ever-opened?_","~:on-msg","~:flush?","~:cb","~:send-buf-ms-ws","~:first-open?","~:taoensso.sente/nil-uid","~:default-client-side-ajax-timeout-ms","^3N","^5R","~:ws","~:impl_","~:get","~:lp-timeout-ms","~:websocket","~:chsk/recv","^5[","~:ch-recv","~:malformed-event","~:requested-reconnect-pending?","~:client-id","~:ev","~:last-error","^3J","~:X-CSRF-Token","^4@","~:csrf-token-fn","~:?content","~:noop","~:else","~:on-close","~:sente/all-users-without-uid","^34","~:wrong-id-type","~:newly-connected","~:connected-uids","^3O","~:method","~:pathname","~:ws-chsk-opts","^3L","^2T","~:trace-evs?","~:packer","~:chs","~:warn","~:server","~:chsk/ws-ping","~:trace","~:last-ws-error","~:chsk/uidport-open","~:?sch","~:swap/dissoc","^4A","^3F","^2K","~:handshake?","~:params","~:chsk/close","~:recur","^4:","~:chsk/state","~:unnamespaced-id","~:debug","~:debug/timeout","~:state","~:ajax","~:send-buf-ms-ajax","~:retry-count_","~:chsk/bad-event","~:requested-reconnect?","^4?","~:udt","^1W","^3G","~:chsk/bad-package","~:reconn","~:ajax-get-or-ws-handshake-fn","~:headers","~:internal","~:error-handler","~:handshake-data","~:chsk/auto-ajax-downgrade","~:chsk/error","~:handshake-data-fn","~:reason","~:host","^3H","~:debug/ws-ping","~:event","~:backoff-ms-fn","~:wrong-type","~:user-id-fn","~:recv-buf-or-n","~:socket_","^6H","~:ever-opened?","~:ppstr","~:id","~:open?","^2S","~:chsk/uidport-close","~:chsk-url-fn","~:url","~:code","~:active-retry-id_","~:lp-timeout","~:ring-req","~:chsk/timeout","~:handled","~:wrap-recv-evs?","~:?data","~:post","~:chsk","^2Q","~:f","~:error","~:send-fn","~:wrong-length","~:uuid","~:on-error","~:timeout","~:resp-type","^3M","~:ajax-opts","~:cbs-waiting_","~:init?","^6I","^2R","~:last-ws-close","^5Z","^3K","~:on-open","^3I","~:timeout-ms","~:chsk/handshake","~:apparent-success","~:?error","~:newly-disconnected","~:state_","~:ajax-cb","~:any","~:chsk/dummy-cb-200","~:<server","^2P","~:ajax-chsk-opts","~:text","~:clean?"]],"~:order",["^8Q","^9<","^7K","^7N","^88","^8?","^7B","^7A","^8;","^8O","^8W","^97","^9;","^70","^7D","^7P","^2T","^93","^7W","~:fhannel sockets for Clojure/Script.\n\n      Protocol  | client>server | client>server ?+ ack/reply | server>user push\n    * WebSockets:       ✓              [1]                           ✓\n    * Ajax:            [2]              ✓                           [3]\n\n    [1] Emulate with cb-uuid wrapping\n    [2] Emulate with dummy-cb wrapping\n    [3] Emulate with long-polling\n\n  Abbreviations:\n    * chsk      - Channel socket (Sente's own pseudo \"socket\")\n    * server-ch - Underlying web server's async channel that implement\n                  Sente's server channel interface\n    * sch       - server-ch alias\n    * uid       - User-id. An application-level user identifier used for async\n                  push. May have semantic meaning (e.g. username, email address),\n                  may not (e.g. client/random id) - app's discretion.\n    * cb        - Callback\n    * tout      - Timeout\n    * ws        - WebSocket/s\n    * pstr      - Packed string. Arbitrary Clojure data serialized as a\n                  string (e.g. edn) for client<->server comms\n    * udt       - Unix timestamp (datetime long)\n\n  Special messages:\n    * Callback wrapping: [<clj> <?cb-uuid>] for [1], [2]\n    * Callback replies: :chsk/closed, :chsk/timeout, :chsk/error\n\n    * Client-side events:\n        [:chsk/handshake [<?uid> <?csrf-token> <?handshake-data> <first-handshake?>]]\n        [:chsk/state [<old-state-map> <new-state-map>]]\n        [:chsk/recv <ev-as-pushed-from-server>] ; Server>user push\n\n    * Server-side events:\n        [:chsk/bad-package <packed-str>]\n        [:chsk/bad-event   <event>]\n        [:chsk/uidport-open  <uid>]\n        [:chsk/uidport-close <uid>]\n\n  Notable implementation details:\n    * core.async is used liberally where brute-force core.async allows for\n      significant implementation simplifications. We lean on core.async's\n      efficiency here.\n    * For WebSocket fallback we use long-polling rather than HTTP 1.1 streaming\n      (chunked transfer encoding). Http-kit _does_ support chunked transfer\n      encoding but a small minority of browsers &/or proxies do not. Instead of\n      implementing all 3 modes (WebSockets, streaming, long-polling) - it seemed\n      reasonable to focus on the two extremes (performance + compatibility).\n      In any case client support for WebSockets is growing rapidly so fallback\n      modes will become increasingly irrelevant while the extra simplicity will\n      continue to pay dividends.\n\n  General-use notes:\n    * Single HTTP req+session persists over entire chsk session but cannot\n      modify sessions! Use standard a/sync HTTP Ring req/resp for logins, etc.\n    * Easy to wrap standard HTTP Ring resps for transport over chsks. Prefer\n      this approach to modifying handlers (better portability)."]